[
  {
    "path": "app-frontend/package.json",
    "content": "{\n  \"name\": \"app-frontend\",\n  \"private\": true,\n  \"scripts\": {\n    \"test\": \"jest --ci --coverage\",\n    \"test:watch\": \"jest --watch\",\n    \"arch:check\": \"depcruise --config src/architecture/depcruise.config.js src | dependency-cruiser -\",\n    \"api:lint\": \"spectral lint ../api/openapi.yaml\",\n    \"api:diff\": \"openapi-diff --fail-on-changed --base ../api/openapi.yaml --revision ../api/openapi.yaml\",\n    \"e2e\": \"playwright test\",\n    \"e2e:report\": \"playwright show-report\",\n    \"e2e:trace\": \"playwright show-trace\"\n  },\n  \"devDependencies\": {\n    \"@playwright/test\": \"^1.47.0\",\n    \"@stoplight/spectral-cli\": \"^6.11.1\",\n    \"dependency-cruiser\": \"^16.5.0\",\n    \"jest\": \"^29.7.0\",\n    \"openapi-diff\": \"^0.24.1\",\n    \"ts-jest\": \"^29.2.5\",\n    \"typescript\": \"^5.5.0\"\n  }\n}\n"
  },
  {
    "path": "app-frontend/jest.config.ts",
    "content": "import type { Config } from 'jest';\nconst config: Config = {\n  preset: 'ts-jest',\n  testEnvironment: 'jsdom',\n  collectCoverage: true,\n  coverageThreshold: { global: { statements: 70, branches: 60, functions: 70, lines: 70 } }\n};\nexport default config;\n"
  },
  {
    "path": "app-frontend/tsconfig.json",
    "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2022\",\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Node\",\n    \"strict\": true,\n    \"skipLibCheck\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {}\n  },\n  \"include\": [\"src/**/*.ts\", \"jest.config.ts\"]\n}\n"
  },
  {
    "path": "app-frontend/.eslintrc.json",
    "content": "{\n  \"root\": true,\n  \"parserOptions\": { \"project\": [\"./tsconfig.json\"] },\n  \"env\": { \"es2022\": true, \"browser\": true, \"node\": true },\n  \"extends\": [],\n  \"rules\": {\n    \"no-restricted-imports\": [\"error\", { \"patterns\": [\"src/app/features/*/*\", \"src/app/shared/*/*\"] }]\n  }\n}\n"
  },
  {
    "path": "app-frontend/src/architecture/depcruise.config.js",
    "content": "module.exports = {\n  forbidden: [\n    { name: 'no-cycles', severity: 'error', from: {}, to: { circular: true } },\n    { name: 'shared-no-import-features', severity: 'error', from: { path: '^src/app/shared' }, to: { path: '^src/app/features' } },\n    { name: 'public-api-only', severity: 'error', from: { path: 'src/app/(features|shared)/.+' }, to: { path: 'src/app/(features|shared)/.+', pathNot: 'public-api.ts' } }\n  ],\n  options: { tsConfig: { fileName: 'tsconfig.json' } }\n};\n"
  },
  {
    "path": "app-frontend/src/app/app.component.ts",
    "content": "export class AppComponent { title = 'app-frontend'; }\n"
  },
  {
    "path": "app-frontend/playwright.config.ts",
    "content": "import { defineConfig } from '@playwright/test';\nexport default defineConfig({\n  testDir: './e2e',\n  reporter: [['list'], ['html', { outputFolder: 'playwright-report' }]],\n  use: { trace: 'on-first-retry', video: 'retain-on-failure', screenshot: 'only-on-failure' }\n});\n"
  }
]